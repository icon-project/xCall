/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IConnection,
  IConnectionInterface,
} from "../../interfaces/IConnection";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_response",
        type: "bool",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "string",
        name: "_svc",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_sn",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IConnection__factory {
  static readonly abi = _abi;
  static createInterface(): IConnectionInterface {
    return new utils.Interface(_abi) as IConnectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConnection {
    return new Contract(address, _abi, signerOrProvider) as IConnection;
  }
}
