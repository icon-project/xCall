/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICallService,
  ICallServiceInterface,
} from "../../interfaces/ICallService";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_reqId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_code",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "CallExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_from",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_sn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reqId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "CallMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_sn",
        type: "uint256",
      },
    ],
    name: "CallMessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_sn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_code",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "ResponseMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_sn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_code",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "RollbackExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_sn",
        type: "uint256",
      },
    ],
    name: "RollbackMessage",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reqId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sn",
        type: "uint256",
      },
    ],
    name: "executeRollback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_net",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_rollback",
        type: "bool",
      },
      {
        internalType: "string[]",
        name: "_sources",
        type: "string[]",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_net",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_rollback",
        type: "bool",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_rollback",
        type: "bytes",
      },
    ],
    name: "sendCallMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_rollback",
        type: "bytes",
      },
      {
        internalType: "string[]",
        name: "sources",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "destinations",
        type: "string[]",
      },
    ],
    name: "sendCallMessage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ICallService__factory {
  static readonly abi = _abi;
  static createInterface(): ICallServiceInterface {
    return new utils.Interface(_abi) as ICallServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICallService {
    return new Contract(address, _abi, signerOrProvider) as ICallService;
  }
}
