name: Pre-release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
permissions:
  contents: write
  packages: write
  repository-projects: write

jobs:
  build_javascore:
    name: Build Javascore Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build Javascore Contracts
        working-directory: contracts/javascore
        run: |
          ./gradlew clean build
          ./gradlew optimizedJar
          ./gradlew zipOutputOptimizedJars
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: javascore-contracts
          path: ./contracts/javascore/build/javascore-contracts.zip
  build_wasm:
    name: Build Cosmwasm Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.69.0
          target: wasm32-unknown-unknown
          override: true
          profile: minimal
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      - name: Compile WASM
        run: |
          rustup component add rustfmt --toolchain 1.69.0-x86_64-unknown-linux-gnu
          rustup component add clippy --toolchain 1.69.0-x86_64-unknown-linux-gnu     
          bash ./scripts/optimize-cosmwasm.sh
          cd artifacts/archway && zip -r ../../cosmwasm-contracts.zip . -j
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cosmwasm-contracts
          path: cosmwasm-contracts.zip
  release:
    name: Release and Publish
    runs-on: ubuntu-latest
    needs:
      - build_javascore
      - build_wasm
    steps:
      - name: Initialize variables
        id: vars
        run: |
          echo «::set-output name=date::$(date +'%Y-%m-%d')»
          echo «::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)»
      - name: Download Javascore Artifacts
        uses: actions/download-artifact@v2
        with:
          name: javascore-contracts
          path: javascore-contracts

      - name: Download Cosmwasm Artifacts
        uses: actions/download-artifact@v2
        with:
          name: cosmwasm-contracts
          path: cosmwasm-contracts

      - name: Unzip Javascore Artifacts
        run: unzip javascore-contracts/javascore-contracts.zip -d javascore-contracts && rm -rf javascore-contracts/javascore-contracts.zip

      - name: Unzip Cosmwasm Artifacts
        run: unzip cosmwasm-contracts/cosmwasm-contracts.zip -d cosmwasm-contracts && rm -rf cosmwasm-contracts/cosmwasm-contracts.zip

      - name: Remove extra files
        run: |
          find ./cosmwasm-contracts ! -name 'cw_xcall_[0-9].[0-9].[0-9].wasm' -type f -exec rm {} +
          find ./javascore-contracts ! -name 'xcall-[0-9].[0-9].[0-9]-optimized.jar' -type f -exec rm {} +

      - name: Generate checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            cosmwasm-contracts/*.wasm
            javascore-contracts/*.jar
          output: check256sums.txt

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          files: |
            ./javascore-contracts/*.jar
            ./cosmwasm-contracts/*.wasm
            check256sums.txt
